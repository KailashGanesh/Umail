{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://learning-webpack/./src/js/domFunctions.js","webpack://learning-webpack/./src/js/getData.js","webpack://learning-webpack/./src/js/globals.js","webpack://learning-webpack/./src/styles/main.scss?5104","webpack://learning-webpack/webpack/bootstrap","webpack://learning-webpack/webpack/runtime/define property getters","webpack://learning-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://learning-webpack/webpack/runtime/make namespace object","webpack://learning-webpack/./src/index.js"],"sourcesContent":["import globals from './globals';\n\n/**\n * loops through the emailData[folderName eg. 'inbox'] and populates email list element\n * @param  {object} data emailData object\n * @param  {string} folderName the folder the email belongs to eg. inbox, sent etc\n */\nexport const popEmailList = (data, folderName) => {\n    const emailList = document.getElementById('email-list');\n    const list = data[folderName]\n\n    emailList.innerHTML = ''; // clear email list\n    emailList.classList.remove('d-flex','ai-center','jc-center'); // remove classes that might be added in default screen\n\n    if(list.length == 0){\n        // if no emails are available in the current folder show the default screen\n        defaultScreen(true,false)\n    }\n\n    // loop thought the array\n    for (let i = 0; i < list.length; i++) {\n\n        // if attachment is available/true, add attachment icon\n        let attachment = list[i]['attachment'] ? `<svg class=\"va-middle fill-cool-gray\" height=\"15\" width=\"15\"> <use xlink:href=\"dist/sprite.svg#icon-paperclip-solid\"></use> </svg>`: '';\n\n        // if reply is true, add reply icon\n        let reply = list[i]['reply'] ? `<svg class=\"va-middle fill-cool-gray\" height=\"20\" width=\"20\"> <use xlink:href=\"dist/sprite.svg#icon-arrow-back-outline\"></use> </svg>`: '';\n\n        let tag = ''; // default no tags\n\n        if(list[i]['tag'].length > 1){\n            // if tag is available add the tag class\n            tag =`<span class=\"tag--${list[i]['tag']} circle va-middle ml-1\"></span>`\n        }\n\n\n        emailList.innerHTML += `\n    <li class=\"email__item d-flex flex-direction-col p-5 ${list[i]['unread']? 'unread':''}\" id=\"${globals.emailData[folderName].indexOf(list[i])}\" data-folder=\"${folderName}\">\n        <div class=\"d-flex ai-center jc-space-between\">\n            <p class=\"heading-sm email__subject clr-gunmetal va-middle\">${list[i]['subject']}</p>\n            <span class=\"fs-sm clr-gunmetal\">${list[i]['time']}</span>\n        </div>\n        <div class=\"d-flex ai-center jc-space-between\">\n            <p class=\"fs-sm clr-cool-gray\">${list[i]['name']}</p>\n            <div>\n                ${attachment}\n                ${reply}\n                ${tag}\n            </div>\n        </div> \n    </li>\n    `;\n    }\n}\n\n/**\n * clears child elements and shows a default or placeholder screen in emailList and emailReader\n * @param  {Boolean} clarEmailList if true it will change email list to default view\n * @param  {Boolean} clearEmailReader if true it will change email reader to default view\n */\nexport const defaultScreen = (clearEmailList = false,clearEmailReader = false) => {\n\n    if(clearEmailList){\n        const emailList = document.getElementById('email-list');\n        emailList.classList.add('d-flex','ai-center','jc-center');\n\n        emailList.innerHTML = `<div> \n        <svg width=\"120\" height=\"120\" class=\"va-middle m-auto d-block fill-cool-gray\"><use xlink:href=\"dist/sprite.svg#icon-folder-open-solid\"></use></svg>\n        <p class=\"clr-cool-gray\">No emails in this folder</p>\n        </div>`;\n    }\n\n    if(clearEmailReader){\n        const emailReader = document.getElementById('email-reader');\n        emailReader.classList.add('d-flex','ai-center','jc-center');\n\n        emailReader.innerHTML = `<div class=\"ta-c\"> \n        <p class=\"clr-cool-gray m-auto mb-4\">No email selected</p>\n        <svg width=\"120\" height=\"120\" class=\"va-middle m-auto d-block fill-cool-gray\" style=\"transform: translateX(-10px);\"><use xlink:href=\"dist/sprite.svg#icon-sparrow-solid\"></use></svg>\n        <p class=\"clr-cool-gray mt-3\">Sparrow Email Client</p>\n        </div>`;\n    }\n\n}\n\n/**\n * calls highlightElement on clicked item in email list\n * displays the message,subject, profile picture in email reader\n * @param  {Object} data the email data object\n * @param  {HTMLElement} eventElement the email item element that needs to be displayed (the item from the list the user clicked on)\n */\nexport const popEmailReader = (data,eventElement) => {\n    // highlight the currently displaced email in email list\n    highlightElement(eventElement, 'emailList')\n    \n    const emailReader = document.getElementById('email-reader');\n    emailReader.classList.remove('d-flex','ai-center','jc-center');\n\n    const index = eventElement.id;\n    const folder = eventElement.dataset.folder;\n\n    let attachment = '';\n    if(globals.emailData[folder][index]['attachment']){\n        globals.emailData[folder][index]['files'].forEach(fileName => {\n\n            let fileType = fileName.slice(fileName.length - 3)\n\n            if(fileType == 'pdf'){\n                // if extension is pdf add pdf svg\n                attachment += `<div class=\"attachment pt-2 pb-2 pl-4 pr-4\"><svg width=\"20\" height=\"20\" class=\"va-middle fill-red\"><use xlink:href=\"dist/sprite.svg#icon-file-pdf-solid\"></use></svg><span class=\"va-middle ml-2\">${fileName}</span></div>`;\n            }else if (fileType == 'doc'){\n                // if extension is doc add doc svg\n                attachment += `<div class=\"attachment pt-2 pb-2 pl-4 pr-4\"><svg width=\"20\" height=\"20\" class=\"va-middle fill-blue\"><use xlink:href=\"dist/sprite.svg#icon-file-word-solid\"></use></svg><span class=\"va-middle ml-2\">${fileName}</span></div>`;\n            }else{\n                // if extension is other then those two, add normal file svg\n                attachment += `<div class=\"attachment pt-2 pb-2 pl-4 pr-4\"><svg width=\"20\" height=\"20\" class=\"va-middle\"><use xlink:href=\"dist/sprite.svg#icon-file-solid\"></use></svg><span class=\"va-middle ml-2\">${fileName}</span></div>`;\n            }\n        });\n    }\n\n    let pictureJpg = 'dist/img/avatar-512x512.jpg' // by default it's unknown profile picture\n    if(data[folder][index]['picture'].length){\n        // if picture exists in json - change it to that picture\n        pictureJpg = `dist/img/${data[folder][index]['picture']}`\n    }\n    let pictureWebp = pictureJpg.slice(0,-4) + '.webp'; // remove .jpg and add .webp\n\n    let tag = ''; // default no tags\n    if(data[folder][index]['tag'].length > 1){ \n        // if tag is available, add that tag class\n        tag =`<span class=\"tag--${data[folder][index]['tag']} email__tag\"></span>`\n    }\n\n    emailReader.innerHTML = `\n<div class=\"email__header d-flex jc-space-between ai-center flex-wrap pt-10 pb-10 pl-7 pr-7\">\n    <div class=\"d-flex ai-center jc-space-between flex-wrap\">\n        <div class=\"email__imgContainer\">\n\n            <picture>\n                <source srcset=\"${pictureWebp}\" type=\"image/webp\">\n                <source srcset=\"${pictureJpg}\" type=\"image/jpeg\">\n\n                <img src=\"${pictureJpg}\" alt=\"profile picture\" class=\"fs-sm email__picture\">\n            </picture>\n            ${tag}\n        </div>\n        <div class=\"ml-4\">\n            <p>${data[folder][index]['subject']}</p>\n            <div>\n                <span class=\"fs-md clr-cool-gray\">${ folder == 'sent'|| folder == 'drafts' ?'To:':'From:'}</span>\n\n                <a tabindex=\"0\" href=\"javascript:void(0);\" class=\"dropdown fs-sm\" id=\"dropdown\">\n                    <span class=\"va-middle clr-cool-gray\">${data[folder][index]['name']}</span>\n                    <svg class=\"va-middle fill-cool-gray\" width=\"10\" height=\"10\">\n                        <use xlink:href=\"dist/sprite.svg#icon-chevron-down-solid\"></use>\n                    </svg>\n                    <div class=\"dropdown__content\">\n                        <p>From: ${data[folder][index]['from']}</p>\n                        <p>To: ${data[folder][index]['to']}</p>\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"btn-group--round\">\n        <button class=\"btn\">\n            <svg class=\"btn__icon\">\n                <use xlink:href=\"dist/sprite.svg#icon-star\"></use>\n            </svg>\n        </button>\n        <button class=\"btn\">\n            <svg class=\"btn__icon\">\n                <use xlink:href=\"dist/sprite.svg#icon-document-text\"></use>\n            </svg>\n        </button>\n        <button class=\"btn btn-clicked\" id=\"deleteBtn\">\n            <svg class=\"btn__icon\">\n                <use xlink:href=\"dist/sprite.svg#icon-trash-can\"></use>\n            </svg>\n        </button>\n        <button class=\"btn\">\n            <svg class=\"btn__icon\">\n                <use xlink:href=\"dist/sprite.svg#icon-arrow-back-outline\"></use>\n            </svg>\n        </button>\n    </div>\n</div>\n\n<div class=\"email__body p-7\"> \n    <p class=\"email__message\">${data[folder][index]['message']}</p>\n    \n    <div class=\"email__attachments d-flex flex-wrap\">${attachment}</div>\n</div>`;\n\n    if(eventElement.classList.contains('unread')){\n        eventElement.classList.remove('unread') // remove class unread on email that's opened\n        globals.emailData[folder][index]['unread'] = false; // mark it read on global data\n        updateNumber(); // update numbers to reflect the change\n    }\n\n    const deleteBtn = document.getElementById('deleteBtn'); // get delete button in email reader\n    const dropdown = document.getElementById('dropdown');\n\n    deleteBtn.addEventListener('click', () =>{\n        deleteEmail(eventElement);\n    })\n\n    dropdown.addEventListener('click', () => {\n        dropdown.classList.toggle('active');\n    })\n\n    dropdown.addEventListener('focusout', () => { \n        dropdown.classList.remove('active'); \n    })\n}\n\n/**\n * moves email object form gobals.emailData[folder] to gobals.emailData['trash'], clicks on active sidebar button to reload the email list\n * if the email is in trash folder, it deletes the object for trash folder\n * @param  {Element} eventElement the email item element that needs to be deleted\n */\nexport const deleteEmail = (eventElement) => {\n\n    const index = eventElement.id;\n    const folder = eventElement.dataset.folder;\n\n    // if the folder we are in, is not trash - move the email to trash\n    // if the folder is trash, the email will just be permanently deleted\n    if(folder != 'trash'){\n        globals.emailData['trash'].push(globals.emailData[folder][index]);\n    }\n\n    // eventElement.remove(); // remove the email from email list\n    globals.emailData[folder].splice(index, 1); // removes the email from global array\n    updateNumber(); // an email was deleted so update the numbers\n    globals['activeSidebarMenu'].click() // click on the current active menu to reload email list\n\n\n    if(globals.settings.openNextEmailAfterDelete){ // checking settings to see if this features is turned on\n        let activeElement = document.getElementById(index);\n\n        if(activeElement == null) return; // if no element after the current element exist, quit\n\n        activeElement.click();\n    }\n}\n\nexport const addEmailToSent = () => {\n\n    const currentEmail = {\n            \"picture\":\"\",\n            \"name\":\"\",\n            \"to\":\"\",\n            \"from\":\"bob@umail.com\",\n            \"subject\":\"\",\n            \"time\":\"\",\n            \"tag\":\"\",\n            \"attachment\":false,\n            \"files\":[],\n            \"reply\":false,\n            \"unread\": false,\n            \"message\":\"\"\n        }\n\n    const emailInput = document.getElementById('emailInput');\n    const subjectInput = document.getElementById('subjectInput');\n    const messageInput = document.getElementById('messageInput');\n\n    // check email address\n    const emailRegex = new RegExp('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$');\n    if(emailInput.value == ''){\n        alert('Please specify at least one recipient.');\n        return;\n    }else if (!emailRegex.test(emailInput.value)){\n        alert(`The address \"${emailInput.value}\" in the recipient field was not recognized. Please make sure that all addresses are properly formatted.`)\n        return;\n    }else{\n        currentEmail.to = emailInput.value;\n        currentEmail.name = emailInput.value.split('@')[0];\n    }\n\n    const date = new Date();\n    currentEmail.time = `${date.getDate()} ${date.toLocaleString('default', { month: 'short' })} ${date.getFullYear()}`\n\n    // if no subject change to (no subject)\n    currentEmail.subject = subjectInput.value == ''? '(no subject)':subjectInput.value;\n    currentEmail.message = messageInput.value == ''? '(no message)':messageInput.value;\n\n    console.log(currentEmail)\n    globals.emailData.sent.unshift(currentEmail)\n\n    if(globals.activeSidebarMenu.id == 'sentBtn'){\n        globals.activeSidebarMenu.click();\n    }\n}\n\nexport const popup = (whichPopup,popupMessage) => {\n    const popupElement = document.getElementById('popup');\n    switch (whichPopup) {\n        case 'settings':\n            popupElement.innerHTML = `\n            <div class=\"settings\">\n                <div class=\"mb-10\">\n                    <p>Settings</p>\n                    <button onclick=\"document.getElementById('popup').classList.remove('shown');\" class=\"btn settings__btn d-block\">&times;</button>\n                </div>\n                <div>\n                    <label for=\"setting_toggle\" class=\"mr-4\">Automatically open next email after deleting</label>\n                    <input class=\"cb2 tgl tgl-ios\" type=\"checkbox\" id=\"setting_toggle\">\n                </div>\n            </div>`\n            popupElement.classList.add('shown') \n        break;\n        case 'emailError':\n            \n        break;\n        case 'fileUpload':\n            popupElement.innerHTML = `\n            <div class=\"settings\">\n                <div class=\"mb-10\">\n                    <p>Attach files</p>\n                    <button onclick=\"document.getElementById('popup').classList.remove('shown');\" class=\"btn settings__btn d-block\">&times;</button>\n                </div>\n                <div class=\"drop-zone\" id=\"drop-zone\">\n                    <span class=\"drop-zone__prompt\">Drop file here or click to upload</span>\n                    <div class=\"drop-zone__thumb\" data-label=\"myfile.txt\" id=\"dropzoneThumbnail\"></div>\n                    <input class=\"drop-zone__input\" type=\"file\"  name=\"emailAttachment\" id=\"dropzoneInput\">\n                </div>\n            </div>`\n            popupElement.classList.add('shown') \n\n            const dropZoneElement =  document.getElementById('drop-zone')\n            const dropZoneInput =  document.getElementById('dropzoneInput')\n\n            dropZoneElement.addEventListener(\"click\", (e) => {\n                dropZoneInput.click();\n            });\n            dropZoneElement.addEventListener(\"dragover\", (e) => {\n                e.preventDefault();\n                dropZoneElement.classList.add(\"drop-zone--over\");\n            });\n        \n            [\"dragleave\", \"dragend\"].forEach((type) => {\n                dropZoneElement.addEventListener(type, (e) => {\n                    dropZoneElement.classList.remove(\"drop-zone--over\");\n                });\n            });\n        \n            dropZoneElement.addEventListener(\"drop\", (e) => {\n                e.preventDefault();\n        \n                if (e.dataTransfer.files.length) {\n                    dropZoneInput.files = e.dataTransfer.files;\n                    updateThumbnail(dropZoneElement, e.dataTransfer.files[0]);\n                }\n        \n                dropZoneElement.classList.remove(\"drop-zone--over\");\n            });\n        break;\n    }\n}\n\n/**\n * highlights the given element by adding css class\n * @param  {HTMLElement} element the element to make active or highlight\n * @param  {string} parentElement which parent element does the element belong to? (sidebarMenu or emailList)\n */\n export const highlightElement = (element, parentElement) => {\n\n\n    switch (parentElement) {\n        case 'sidebarMenu':\n            if (globals.activeSidebarMenu) {\n                globals.activeSidebarMenu.classList.remove('active')\n            }\n            globals.activeSidebarMenu = element;\n            element.classList.add('active')\n            break;\n\n        case 'emailList':\n            if (globals.activeEmailList) {\n                globals.activeEmailList.classList.remove('active--email')\n            }\n            globals.activeEmailList = element;\n            element.classList.add('active--email')\n            break;\n    }\n\n}\n\n/**\n * \n * @param  {HTMLElement} dropzoneElement\n * @param  {file} file \n */\nexport const updateThumbnail = (dropzoneElement,file) => {\n    console.log(dropzoneElement);\n    console.log(file);\n\n    const thumbnailElement = dropzoneElement.querySelector('#dropzoneThumbnail');\n\n    // remove prompt and show thumbnail\n    dropzoneElement.classList.add('drop-zone--thumbnail');\n\n    thumbnailElement.dataset.label = file.name;\n\n    console.log(file.name)\n\n    if(file.type.startsWith('image/')){\n        const reader = new FileReader();\n\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n            thumbnailElement.style.backgroundImage = `url('${reader.result}')`;\n        };\n    }else{\n            thumbnailElement.style.backgroundImage = null;\n    }\n}\n\n/**\n * updates the number of unread email in inboxBtn text and app title text - inbox (2), sparrow (2)\n * adds the number of emails in each tag from the inbox next to tag text- personal (1), friends (3)\n * adds the number of emails in trash folder next to trash text\n * if no email is available just the text is displayed, the brackets and number are not shown\n */\nexport const updateNumber = () => {\n    let appHeading = document.getElementById('addHeading');\n    let inboxBtnText = document.getElementById('inboxBtnText');\n    let trashBtnText = document.getElementById('trashBtnText');\n\n    let personalBtnText = document.getElementById('personalBtnText');\n    let clientsBtnText = document.getElementById('clientsBtnText');\n    let familyBtnText = document.getElementById('familyBtnText');\n    let friendsBtnText = document.getElementById('friendsBtnText');\n    let archivesBtnText = document.getElementById('archivesBtnText');\n\n    \n    let unreadEmailNumber = filterObject('inbox','unread',true).length;\n\n    appHeading.innerHTML = `sparrow ${(unreadEmailNumber == '0')?'':'(' + unreadEmailNumber + ')'}`;\n    inboxBtnText.innerHTML = `Inbox ${(unreadEmailNumber == '0')?'':'(' + unreadEmailNumber + ')'}`;\n    trashBtnText.innerHTML = `Trash ${globals.emailData.trash.length == '0'? '':'(' + globals.emailData.trash.length+')'}`;\n\n    let tagList = {'personal':personalBtnText,\n                'clients':clientsBtnText,\n                'family':familyBtnText,\n                'friends':friendsBtnText,\n                'archives':archivesBtnText,\n            }\n\n    for(let i in tagList){\n       let number = filterObject('inbox','tag',i).length\n        tagList[i].innerHTML = `${i} ${number == '0'?'':'(' + number + ')'}`;\n    }\n}\n\n/**\n * adds class of 'shown' to element with id of composeBox\n */\n export const openComposeBox = () => {\n    let composeBox = document.getElementById('composeBox')\n    composeBox.classList.add('shown');\n}\n\n/**\n * removes class of 'shown' from element with id of composeBox\n */\nexport const closeComposeBox = () => {\n    //hides compose box\n    document.getElementById('composeBox').classList.remove('shown');\n\n    // clears the values of inputs on close\n    document.getElementById('emailInput').value = '';\n    document.getElementById('subjectInput').value = '';\n    document.getElementById('messageInput').value = '';\n\n}\n\n\n/**\n * looks at gobals.emailData[folder]\n * returns a array of objects  if the key is equal to or matches depends on bool passed on isMatch\n * @param  {string} folder folder to look in gobals.emailData\n * @param  {string} key which key of the object to look for\n * @param  {string} search the value to check for equal/partial match\n * @param  {boolean} isMatch true - returns if it has a partial match false - returns only if search value is equal. | default false\n * @return {Array} returns a array with objects that have key that are equal to or match the search string\n */\nexport const filterObject = (folder, key, search, isMatch = false) => {\n    if(isMatch){\n        return globals.emailData[folder].filter(obj => obj[key].toLowerCase().match(search.toLowerCase()));\n    }\n\n    return globals.emailData[folder].filter(obj => obj[key] == search);\n}","import {updateNumber} from \"./domFunctions\";\nimport globals from \"./globals\"\n\n/**\n * fetches json from a url and adds emailData to globals.emailData \n * then opens the inbox and first email in inbox, finally calls the updateNumber() function\n * @param  {String} url the url to fetch\n */\nasync function getData(url){\n    try{\n        let response = await fetch(url);\n        let emailData = await response.json();\n\n        \n        // globals = emailData;\n        globals.emailData.inbox = emailData.inbox;\n        globals.emailData.sent = emailData.sent;\n        globals.emailData.starred = emailData.starred;\n        globals.emailData.drafts = emailData.drafts;\n        globals.emailData.trash = emailData.trash;\n\n\n        const inboxBtn = document.getElementById('inboxBtn');\n        const emailList =  document.getElementById('email-list');\n\n        inboxBtn.click(); // open inbox on page load\n        emailList.firstElementChild.click(); // open first email on page load\n        updateNumber(); // update numbers on menus\n    }\n    catch(error){\n        alert('we got an unexpected error - please try later');\n        console.log(error);\n    }\n    \n}\n\nexport default getData;","let globals = { \n  'emailData':{\n    'inbox':[]\n  },\n  'activeSidebarMenu':'',\n  'activeEmailList':'',\n  'settings':{'openNextEmailAfterDelete':true}\n};\n\nexport default  globals;\n","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import getData from './js/getData';\nimport globals from './js/globals';\nimport {popEmailList, popEmailReader, highlightElement,defaultScreen, filterObject,openComposeBox, closeComposeBox, addEmailToSent, popup} from './js/domFunctions';\nimport './styles/main.scss'\n\n\nlet url = 'https://raw.githubusercontent.com/KailashGanesh/Umail/master/emails.json';\n// url = 'http://127.0.0.1:5500/emails.json'\n\nconst sideBar =  document.getElementById('sidebar');\n// const emailList =  document.getElementById('email-list');\n// const searchBar = document.getElementById('searchBar');\n// const inboxBtn = document.getElementById('inboxBtn');\n// const composeCloseBtn = document.getElementById('closeCompose');\n// const sendEmailBtn = document.getElementById('sendBtn');\n\ngetData(url);\n\nlet data = globals.emailData;\n\ndocument.getElementById('sidebar').addEventListener('click', (e) => {\n    let eventTarget = e.target.closest('button');\n\n    if(eventTarget == null){\n        return; // if user clicked on empty space exit\n    }\n    // else if(eventTarget.dataset.type == 'folder'){\n    //     let folderName = eventTarget.id.slice(0, -3);\n\n\n    //     highlightElement(eventTarget,'sidebarMenu')\n    //     defaultScreen(false,true)\n    //     popEmailList(data, folderName)\n    // }else if(eventTarget.dataset.type == 'tag'){\n    //     let search = eventTarget.id.slice(0, -3);\n    //     let result = filterObject('inbox', 'tag', search);\n\n    //     highlightElement(eventTarget,'sidebarMenu')\n    //     defaultScreen(false,true)\n    //     popEmailList({'inbox':result}, 'inbox')\n    // }else if(eventTarget.id == 'settingsBtn'){\n    //     let popup = document.getElementById('popup');\n    //     let toggle = document.getElementById('setting_toggle');\n\n    //     popup.classList.add('shown');\n\n    //     toggle.addEventListener('change',() => {\n\n    //         globals.settings.openNextEmailAfterDelete = (/true/i).test(toggle.value);\n    //     })\n    // }else if(eventTarget.id == 'composeBtn'){\n    //    openComposeBox();\n    // }else{return;}\n\n    switch (eventTarget.dataset.type) {\n        case 'folder':\n            let folderName = eventTarget.id.slice(0, -3);\n            highlightElement(eventTarget,'sidebarMenu')\n            defaultScreen(false,true)\n            popEmailList(data, folderName)\n        break;\n        case 'tag':\n            let search = eventTarget.id.slice(0, -3);\n            let result = filterObject('inbox', 'tag', search);\n\n            highlightElement(eventTarget,'sidebarMenu')\n            defaultScreen(false,true)\n            popEmailList({'inbox':result}, 'inbox')\n        break;\n        case 'settings':\n            popup('settings')\n            let popup = document.getElementById('popup');\n            let toggle = document.getElementById('setting_toggle');\n\n            popup.classList.add('shown');\n            toggle.addEventListener('change', () => {\n                globals.settings.openNextEmailAfterDelete = (/true/i).test(toggle.value); // converts string 'true' into bool true\n            })\n        break;\n        case 'compose':\n            openComposeBox();\n        break;\n    }\n})\n\ndocument.getElementById('closeCompose').addEventListener('click', closeComposeBox);\ndocument.getElementById('sendBtn').addEventListener('click', addEmailToSent);\ndocument.getElementById('attachBtn').addEventListener('click', () => {popup('fileUpload')});\n\ndocument.getElementById('email-list').addEventListener('click', (e) => {\n    let eventTarget = e.target.closest('li');\n\n    if(eventTarget == null) return;\n\n    popEmailReader(globals.emailData,eventTarget);\n})\n\ndocument.getElementById('searchBar').addEventListener('keyup', (e) => {\n    let searchText = document.getElementById('searchBar').value;\n\n    if (e.key == 'Enter'){\n        e.preventDefault()\n\n        let currentActiveMenuBtn = globals.activeSidebarMenu;\n        let folderName = currentActiveMenuBtn.id.slice(0, -3);\n\n        if(currentActiveMenuBtn.dataset.type == 'folder'){\n            let result = filterObject(folderName, 'subject', searchText, true);\n            let resultObj = {};\n            resultObj[folderName] = result;\n\n            popEmailList(resultObj, folderName)\n        }else if(currentActiveMenuBtn.dataset.type == 'tag'){\n\n            let result = filterObject('inbox', 'tag', folderName);\n\n            globals.emailData[folderName] = result;\n\n            result = filterObject(folderName, 'subject', searchText, true);\n            popEmailList({'inbox':result}, 'inbox')\n        }\n\n        defaultScreen(false,true)\n    }\n})\n\n\ndocument.getElementById('popup').addEventListener('click', (e) => {});\n\n"],"names":["globals","popEmailList","data","folderName","emailList","document","getElementById","list","innerHTML","classList","remove","length","defaultScreen","i","attachment","reply","tag","emailData","indexOf","clearEmailList","clearEmailReader","add","emailReader","popEmailReader","eventElement","highlightElement","index","id","folder","dataset","forEach","fileName","fileType","slice","pictureJpg","pictureWebp","contains","updateNumber","deleteBtn","dropdown","addEventListener","deleteEmail","toggle","push","splice","click","settings","openNextEmailAfterDelete","activeElement","addEmailToSent","currentEmail","emailInput","subjectInput","messageInput","emailRegex","RegExp","value","alert","test","to","name","split","date","Date","time","getDate","toLocaleString","month","getFullYear","subject","message","console","log","sent","unshift","activeSidebarMenu","popup","whichPopup","popupMessage","popupElement","dropZoneElement","dropZoneInput","e","preventDefault","type","dataTransfer","files","updateThumbnail","element","parentElement","activeEmailList","dropzoneElement","file","thumbnailElement","querySelector","label","startsWith","reader","FileReader","readAsDataURL","onload","style","backgroundImage","result","appHeading","inboxBtnText","trashBtnText","personalBtnText","clientsBtnText","familyBtnText","friendsBtnText","archivesBtnText","unreadEmailNumber","filterObject","trash","tagList","number","openComposeBox","composeBox","closeComposeBox","key","search","isMatch","filter","obj","toLowerCase","match","getData","url","fetch","response","json","inbox","starred","drafts","inboxBtn","firstElementChild","sideBar","eventTarget","target","closest","searchText","currentActiveMenuBtn","resultObj"],"sourceRoot":""}