{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://learning-webpack/./src/js/domFunctions.js","webpack://learning-webpack/./src/js/getData.js","webpack://learning-webpack/./src/js/globals.js","webpack://learning-webpack/./src/styles/main.scss?2ff4","webpack://learning-webpack/webpack/bootstrap","webpack://learning-webpack/webpack/runtime/define property getters","webpack://learning-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://learning-webpack/webpack/runtime/make namespace object","webpack://learning-webpack/./src/index.js"],"sourcesContent":["import globals from './globals';\n\n/**\n * loops through the emailData[folderName eg. 'inbox'] and populates email list element\n * @param  {object} data emailData object\n * @param  {string} folderName the folder the email belongs to eg. inbox, sent etc\n */\nexport const popEmailList = (data, folderName) => {\n    const emailList = document.getElementById('email-list');\n    const list = data[folderName]\n\n    emailList.innerHTML = ''; // clear email list\n    emailList.classList.remove('d-flex','ai-center','jc-center'); // remove classes that might be added in default screen\n\n    if(list.length == 0){\n        // if no emails are available in the current folder show the default screen\n        defaultScreen(true,false)\n    }\n\n    // loop thought the array\n    for (let i = 0; i < list.length; i++) {\n\n        // if attachment is available/true, add attachment icon\n        let attachment = list[i]['attachment'] ? `<svg class=\"va-middle fill-cool-gray\" height=\"15\" width=\"15\"> <use xlink:href=\"dist/sprite.svg#icon-paperclip-solid\"></use> </svg>`: '';\n\n        // if reply is true, add reply icon\n        let reply = list[i]['reply'] ? `<svg class=\"va-middle fill-cool-gray\" height=\"20\" width=\"20\"> <use xlink:href=\"dist/sprite.svg#icon-arrow-back-outline\"></use> </svg>`: '';\n\n        let tag = ''; // default no tags\n\n        if(list[i]['tag'].length > 1){\n            // if tag is available add the tag class\n            tag =`<span class=\"tag--${list[i]['tag']} circle va-middle ml-1\"></span>`\n        }\n\n\n        emailList.innerHTML += `\n    <li class=\"email__item ${list[i]['unread']? 'unread':''}\" id=\"${globals.emailData[folderName].indexOf(list[i])}\" data-folder=\"${folderName}\">\n        <div class=\"email__details\">\n            <p class=\"heading-sm email__subject clr-gunmetal va-middle\">${list[i]['subject']}</p>\n            <span class=\"fs-sm clr-gunmetal\">${list[i]['time']}</span>\n        </div>\n        <div class=\"email__details\">\n            <p class=\"fs-sm clr-cool-gray\">${list[i]['name']}</p>\n            <div>\n                ${attachment}\n                ${reply}\n                ${tag}\n            </div>\n        </div> \n    </li>\n    `;\n    }\n}\n\n/**\n * clears child elements and shows a default or placeholder screen in emailList and emailReader\n * @param  {Boolean} clarEmailList if true it will change email list to default view\n * @param  {Boolean} clearEmailReader if true it will change email reader to default view\n */\nexport const defaultScreen = (clearEmailList = false,clearEmailReader = false) => {\n\n    if(clearEmailList){\n        const emailList = document.getElementById('email-list');\n        emailList.classList.add('d-flex','ai-center','jc-center');\n\n        emailList.innerHTML = `<div> \n        <svg width=\"120\" height=\"120\" class=\"va-middle m-auto d-block fill-cool-gray\"><use xlink:href=\"dist/sprite.svg#icon-folder-open-solid\"></use></svg>\n        <p class=\"clr-cool-gray\">No emails in this folder</p>\n        </div>`;\n    }\n\n    if(clearEmailReader){\n        const emailReader = document.getElementById('email-reader');\n        emailReader.classList.add('d-flex','ai-center','jc-center');\n\n        emailReader.innerHTML = `<div class=\"ta-c\"> \n        <p class=\"clr-cool-gray m-auto mb-4\">No email selected</p>\n        <svg width=\"120\" height=\"120\" class=\"va-middle m-auto d-block fill-cool-gray\" style=\"transform: translateX(-10px);\"><use xlink:href=\"dist/sprite.svg#icon-sparrow-solid\"></use></svg>\n        <p class=\"clr-cool-gray mt-3\">Sparrow Email Client</p>\n        </div>`;\n    }\n\n}\n\n/**\n * calls highlightElement on clicked item in email list\n * displays the message,subject, profile picture in email reader\n * @param  {Object} data the email data object\n * @param  {Element} eventElement the email item element that needs to be displayed (the item from the list the user clicked on)\n */\nexport const popEmailReader = (data,eventElement) => {\n    console.log(typeof eventElement)\n    // highlight the currently displaced email in email list\n    highlightElement(eventElement, 'emailList')\n    \n    const emailReader = document.getElementById('email-reader');\n    emailReader.classList.remove('d-flex','ai-center','jc-center');\n\n    const index = eventElement.id;\n    const folder = eventElement.dataset.folder;\n\n    let attachment = '';\n    if(globals.emailData[folder][index]['attachment']){\n        globals.emailData[folder][index]['files'].forEach(fileName => {\n\n            let fileType = fileName.slice(fileName.length - 3)\n\n            if(fileType == 'pdf'){\n                // if extension is pdf add pdf svg\n                attachment += `<div class=\"attachment\"><svg width=\"20\" height=\"20\" class=\"va-middle fill-red\"><use xlink:href=\"dist/sprite.svg#icon-file-pdf-solid\"></use></svg><span class=\"va-middle ml-2\">${fileName}</span></div>`;\n            }else if (fileType == 'doc'){\n                // if extension is doc add doc svg\n                attachment += `<div class=\"attachment\"><svg width=\"20\" height=\"20\" class=\"va-middle fill-blue\"><use xlink:href=\"dist/sprite.svg#icon-file-word-solid\"></use></svg><span class=\"va-middle ml-2\">${fileName}</span></div>`;\n            }else{\n                // if extension is other then those two, add normal file svg\n                attachment += `<div class=\"attachment\"><svg width=\"20\" height=\"20\" class=\"va-middle\"><use xlink:href=\"dist/sprite.svg#icon-file-solid\"></use></svg><span class=\"va-middle ml-2\">${fileName}</span></div>`;\n            }\n        });\n    }\n\n    let pictureJpg = 'dist/img/avatar-512x512.jpg' // by default it's unknown profile picture\n    if(data[folder][index]['picture'].length){\n        // if picture exists in json - change it to that picture\n        pictureJpg = `dist/img/${data[folder][index]['picture']}`\n    }\n    let pictureWebp = pictureJpg.slice(0,-4) + '.webp'; // remove .jpg and add .webp\n\n    let tag = ''; // default no tags\n    if(data[folder][index]['tag'].length > 1){ \n        // if tag is available, add that tag class\n        tag =`<span class=\"tag--${data[folder][index]['tag']} email__tag\"></span>`\n    }\n\n    emailReader.innerHTML = `\n<div class=\"email__header\">\n    <div class=\"d-flex ai-center jc-space-between flex-wrap\">\n        <div class=\"email__imgContainer\">\n\n            <picture>\n                <source srcset=\"${pictureWebp}\" type=\"image/webp\">\n                <source srcset=\"${pictureJpg}\" type=\"image/jpeg\">\n\n                <img src=\"${pictureJpg}\" alt=\"profile picture\" class=\"fs-sm email__picture\">\n            </picture>\n            ${tag}\n        </div>\n        <div class=\"ml-4\">\n            <p>${data[folder][index]['subject']}</p>\n            <div>\n                <span class=\"fs-md clr-cool-gray\">${ folder == 'sent'|| folder == 'drafts' ?'To:':'From:'}</span>\n\n                <a href=\"javascript:void(0);\" class=\"dropdown fs-sm\" id=\"dropdown\">\n                    <span class=\"va-middle clr-cool-gray\">${data[folder][index]['name']}</span>\n                    <svg class=\"va-middle fill-cool-gray\" width=\"10\" height=\"10\">\n                        <use xlink:href=\"dist/sprite.svg#icon-chevron-down-solid\"></use>\n                    </svg>\n                    <div class=\"dropdown__content\">\n                        <p>From: ${data[folder][index]['from']}</p>\n                        <p>To: ${data[folder][index]['to']}</p>\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"btn-group--round\">\n        <button class=\"btn\">\n            <svg class=\"btn__icon\">\n                <use xlink:href=\"dist/sprite.svg#icon-star\"></use>\n            </svg>\n        </button>\n        <button class=\"btn\">\n            <svg class=\"btn__icon\">\n                <use xlink:href=\"dist/sprite.svg#icon-document-text\"></use>\n            </svg>\n        </button>\n        <button class=\"btn btn-clicked\" id=\"deleteBtn\">\n            <svg class=\"btn__icon\">\n                <use xlink:href=\"dist/sprite.svg#icon-trash-can\"></use>\n            </svg>\n        </button>\n        <button class=\"btn\">\n            <svg class=\"btn__icon\">\n                <use xlink:href=\"dist/sprite.svg#icon-arrow-back-outline\"></use>\n            </svg>\n        </button>\n    </div>\n</div>\n\n<div class=\"email__body\"> \n    <p class=\"email__message\">${data[folder][index]['message']}</p>\n    \n    <div class=\"email__attachments\">${attachment}</div>\n</div>`;\n\n    if(eventElement.classList.contains('unread')){\n        eventElement.classList.remove('unread') // remove class unread on email that's opened\n        globals.emailData[folder][index]['unread'] = false; // mark it read on global data\n        updateNumber(); // update numbers to reflect the change\n    }\n\n    let deleteBtn = document.getElementById('deleteBtn'); // get delete button in email reader\n    let dropdown = document.getElementById('dropdown');\n\n    deleteBtn.addEventListener('click', () =>{\n        deleteEmail(eventElement);\n    })\n\n    dropdown.addEventListener('click', () => {\n        dropdown.classList.toggle('active');\n    })\n\n    dropdown.addEventListener('focusout', () => { \n        console.log('nivy poty taku')\n        dropdown.classList.remove('active'); \n    })\n}\n\n/**\n * moves email object form gobals.emailData[folder] to gobals.emailData['trash'], clicks on active sidebar button to reload the email list\n * if the email is in trash folder, it deletes the object for trash folder\n * @param  {Element} eventElement the email item element that needs to be deleted\n */\nexport const deleteEmail = (eventElement) => {\n\n    const index = eventElement.id;\n    const folder = eventElement.dataset.folder;\n\n    // if the folder we are in, is not trash - move the email to trash\n    // if the folder is trash, the email will just be permanently deleted\n    if(folder != 'trash'){\n        globals.emailData['trash'].push(globals.emailData[folder][index]);\n    }\n\n    // eventElement.remove(); // remove the email from email list\n    globals.emailData[folder].splice(index, 1); // removes the email from global array\n    updateNumber(); // an email was deleted so update the numbers\n    globals['activeSidebarMenu'].click() // click on the current active menu to reload email list\n\n\n    if(globals.settings.openNextEmailAfterDelete){ // checking settings to see if this features is turned on\n        let activeElement = document.getElementById(index);\n\n        if(activeElement == null) return; // if no element after the current element exist, quit\n\n        activeElement.click();\n    }\n}\n\n/**\n * highlights the given element by adding css class\n * @param  {Element} element the element to make active or highlight\n * @param  {string} parentElement which parent element does the element belong to? (sidebarMenu or emailList)\n */\nexport const highlightElement = (element, parentElement) => {\n\n\n    switch (parentElement) {\n        case 'sidebarMenu':\n            if (globals.activeSidebarMenu) {\n                globals.activeSidebarMenu.classList.remove('active')\n            }\n            globals.activeSidebarMenu = element;\n            element.classList.add('active')\n            break;\n\n        case 'emailList':\n            if (globals.activeEmailList) {\n                globals.activeEmailList.classList.remove('active--email')\n            }\n            globals.activeEmailList = element;\n            element.classList.add('active--email')\n            break;\n    }\n\n}\n\n/**\n * updates the number of unread email in inboxBtn text and app title text - inbox (2), sparrow (2)\n * adds the number of emails in each tag from the inbox next to tag text- personal (1), friends (3)\n * adds the number of emails in trash folder next to trash text\n * if no email is available just the text is displayed, the brackets and number are not shown\n */\nexport const updateNumber = () => {\n    let appHeading = document.getElementById('addHeading');\n    let inboxBtnText = document.getElementById('inboxBtnText');\n    let trashBtnText = document.getElementById('trashBtnText');\n\n    let personalBtnText = document.getElementById('personalBtnText');\n    let clientsBtnText = document.getElementById('clientsBtnText');\n    let familyBtnText = document.getElementById('familyBtnText');\n    let friendsBtnText = document.getElementById('friendsBtnText');\n    let archivesBtnText = document.getElementById('archivesBtnText');\n\n    \n    let unreadEmailNumber = filterObject('inbox','unread',true).length;\n\n    appHeading.innerHTML = `sparrow ${(unreadEmailNumber == '0')?'':'(' + unreadEmailNumber + ')'}`;\n    inboxBtnText.innerHTML = `Inbox ${(unreadEmailNumber == '0')?'':'(' + unreadEmailNumber + ')'}`;\n    trashBtnText.innerHTML = `Trash ${globals.emailData.trash.length == '0'? '':'(' + globals.emailData.trash.length+')'}`;\n\n    let tagList = {'personal':personalBtnText,\n                'clients':clientsBtnText,\n                'family':familyBtnText,\n                'friends':friendsBtnText,\n                'archives':archivesBtnText,\n            }\n\n    for(let i in tagList){\n       let number = filterObject('inbox','tag',i).length\n        tagList[i].innerHTML = `${i} ${number == '0'?'':'(' + number + ')'}`;\n    }\n}\n\n\n/**\n * adds class of 'shown' to element with id of composeBox\n */\nexport const openComposeBox = () => {\n    let composeBox = document.getElementById('composeBox')\n    composeBox.classList.add('shown');\n}\n\n/**\n * removes class of 'shown' from element with id of composeBox\n */\nexport const closeComposeBox = () => {\n    let composeBox = document.getElementById('composeBox');\n    composeBox.classList.remove('shown');\n\n    let emailInput = document.getElementById('emailInput');\n    let subjectInput = document.getElementById('subjectInput');\n    let messageInput = document.getElementById('messageInput');\n\n    // clears the values of inputs on close\n    emailInput.value = '';\n    subjectInput.value = '';\n    messageInput.value = '';\n}\n\n/**\n * looks at gobals.emailData[folder]\n * returns a array of objects  if the key is equal to or matches depends on bool passed on isMatch\n * @param  {string} folder folder to look in gobals.emailData\n * @param  {string} key which key of the object to look for\n * @param  {string} search the value to check for equal/partial match\n * @param  {boolean} isMatch true - returns if it has a partial match false - returns only if search value is equal. | default false\n * @return {Array} returns a array with objects that have key that are equal to or match the search string\n */\nexport const filterObject = (folder, key, search, isMatch = false) => {\n    if(isMatch){\n        return globals.emailData[folder].filter(obj => obj[key].toLowerCase().match(search.toLowerCase()));\n    }\n\n    return globals.emailData[folder].filter(obj => obj[key] == search);\n}","import {updateNumber} from \"./domFunctions\";\nimport globals from \"./globals\"\n\n/**\n * fetches json from a url and adds emailData to globals.emailData \n * then opens the inbox and first email in inbox, finally calls the updateNumber() function\n * @param  {String} url the url to fetch\n */\nasync function getData(url){\n    try{\n        let response = await fetch(url);\n        let emailData = await response.json();\n\n        \n        // globals = emailData;\n        globals.emailData.inbox = emailData.inbox;\n        globals.emailData.sent = emailData.sent;\n        globals.emailData.starred = emailData.starred;\n        globals.emailData.drafts = emailData.drafts;\n        globals.emailData.trash = emailData.trash;\n\n\n        const inboxBtn = document.getElementById('inboxBtn');\n        const emailList =  document.getElementById('email-list');\n\n        inboxBtn.click(); // open inbox on page load\n        emailList.firstElementChild.click(); // open first email on page load\n        updateNumber(); // update numbers on menus\n    }\n    catch(error){\n        alert('we got an unexpected error - please try later');\n        console.log(error);\n    }\n    \n}\n\nexport default getData;","let globals = { \n  'emailData':{\n    'inbox':[]\n  },\n  'activeSidebarMenu':'',\n  'activeEmailList':'',\n  'settings':{'openNextEmailAfterDelete':true}\n};\n\nexport default  globals;\n","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import getData from './js/getData';\nimport globals from './js/globals';\nimport {popEmailList, popEmailReader, highlightElement,defaultScreen, filterObject,openComposeBox, closeComposeBox} from './js/domFunctions';\nimport './styles/main.scss'\n\n\nlet url = 'https://raw.githubusercontent.com/KailashGanesh/Umail/master/emails.json';\n// url = 'http://127.0.0.1:5500/emails.json'\n\nconst sideBar =  document.getElementById('sidebar');\nconst emailList =  document.getElementById('email-list');\nconst searchBar = document.getElementById('searchBar');\nconst inboxBtn = document.getElementById('inboxBtn');\nconst composeCloseBtn = document.getElementById('closeCompose');\nconst sendEmailBtn = document.getElementById('sendBtn');\n\ngetData(url);\n\nlet data = globals.emailData;\n\nsideBar.addEventListener('click', (e) => {\n    let eventTarget = e.target.closest('button');\n\n    if(eventTarget == null){\n        return; // if user clicked on empty space exist\n    }else if(eventTarget.dataset.type == 'folder'){\n        let folderName = eventTarget.id.slice(0, -3);\n\n\n        highlightElement(eventTarget,'sidebarMenu')\n        defaultScreen(false,true)\n        popEmailList(data, folderName)\n    }else if(eventTarget.dataset.type == 'tag'){\n        let search = eventTarget.id.slice(0, -3);\n        let result = filterObject('inbox', 'tag', search);\n\n        highlightElement(eventTarget,'sidebarMenu')\n        defaultScreen(false,true)\n        popEmailList({'inbox':result}, 'inbox')\n    }else if(eventTarget.id == 'settingsBtn'){\n        let popup = document.getElementById('popup');\n        let toggle = document.getElementById('setting_toggle');\n\n        popup.classList.add('shown');\n\n        toggle.addEventListener('change',() => {\n\n            globals.settings.openNextEmailAfterDelete = (/true/i).test(toggle.value);\n        })\n    }else if(eventTarget.id == 'composeBtn'){\n       openComposeBox();\n    }else{return;}\n})\n\ncomposeCloseBtn.addEventListener('click', closeComposeBox);\nsendEmailBtn.addEventListener('click', closeComposeBox);\n\nemailList.addEventListener('click', (e) => {\n    let eventTarget = e.target.closest('li');\n\n    if(eventTarget == null) return;\n\n    popEmailReader(globals.emailData,eventTarget);\n})\n\nsearchBar.addEventListener('keyup', (e) => {\n    let searchText = searchBar.value;\n\n    if (e.key == 'Enter'){\n        e.preventDefault()\n\n        let currentActiveMenuBtn = globals.activeSidebarMenu;\n        let folderName = currentActiveMenuBtn.id.slice(0, -3);\n\n        if(currentActiveMenuBtn.dataset.type == 'folder'){\n            let result = filterObject(folderName, 'subject', searchText, true);\n            let resultObj = {};\n            resultObj[folderName] = result;\n\n            popEmailList(resultObj, folderName)\n        }else if(currentActiveMenuBtn.dataset.type == 'tag'){\n\n            let result = filterObject('inbox', 'tag', folderName);\n\n            globals.emailData[folderName] = result;\n\n            result = filterObject(folderName, 'subject', searchText, true);\n            popEmailList({'inbox':result}, 'inbox')\n        }\n\n        defaultScreen(false,true)\n    }\n})\n\n\n\n"],"names":["globals","popEmailList","data","folderName","emailList","document","getElementById","list","innerHTML","classList","remove","length","defaultScreen","i","attachment","reply","tag","emailData","indexOf","clearEmailList","clearEmailReader","add","emailReader","popEmailReader","eventElement","console","log","highlightElement","index","id","folder","dataset","forEach","fileName","fileType","slice","pictureJpg","pictureWebp","contains","updateNumber","deleteBtn","dropdown","addEventListener","deleteEmail","toggle","push","splice","click","settings","openNextEmailAfterDelete","activeElement","element","parentElement","activeSidebarMenu","activeEmailList","appHeading","inboxBtnText","trashBtnText","personalBtnText","clientsBtnText","familyBtnText","friendsBtnText","archivesBtnText","unreadEmailNumber","filterObject","trash","tagList","number","openComposeBox","composeBox","closeComposeBox","emailInput","subjectInput","messageInput","value","key","search","isMatch","filter","obj","toLowerCase","match","getData","url","fetch","response","json","inbox","sent","starred","drafts","inboxBtn","firstElementChild","alert","sideBar","searchBar","composeCloseBtn","sendEmailBtn","e","eventTarget","target","closest","type","result","popup","test","searchText","preventDefault","currentActiveMenuBtn","resultObj"],"sourceRoot":""}